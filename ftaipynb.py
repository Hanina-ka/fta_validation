# -*- coding: utf-8 -*-
"""ftaipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BXZXA2He4YrFfojfwq1sbh5-zqm7EKqC
"""

pip install transformers sentence-transformers torch streamlit pdfplumber pytesseract pandas openpyxl pdf2image

from transformers import AutoTokenizer, AutoModelForSeq2SeqLM, pipeline

# Example with FLAN-T5
tokenizer = AutoTokenizer.from_pretrained("google/flan-t5-large")
model = AutoModelForSeq2SeqLM.from_pretrained("google/flan-t5-large")

extractor = pipeline("text2text-generation", model=model, tokenizer=tokenizer)

import pdfplumber
from pdf2image import convert_from_path
import pytesseract

def extract_text_from_pdf(file):
    text = ""
    try:
        with pdfplumber.open(file) as pdf:
            for page in pdf.pages:
                text += page.extract_text() + "\n"
        if not text.strip():  # fallback to OCR
            images = convert_from_path(file)
            for img in images:
                text += pytesseract.image_to_string(img) + "\n"
    except:
        text = ""
    return text

def extract_fields(text):
    prompt = f"""
Extract the following fields from this invoice text in JSON:
- Invoice Number
- Supplier TRN (15 digits)
- Invoice Date
- Customer Name
- Total Amount
- VAT Amount
- Total Amount Incl VAT
- Currency
- Invoice Type (Full Tax Invoice > AED 10,000, Simplified <= AED 10,000)
Return strictly in JSON format.
Invoice Text:
\"\"\"{text}\"\"\"
"""
    output = extractor(prompt, max_length=1024)[0]['generated_text']

    import json
    try:
        return json.loads(output)
    except:
        return {}

import streamlit as st
import pandas as pd

st.title("ðŸ“„ FTA Invoice Validator (AI-powered Free)")

uploaded_files = st.file_uploader("Upload Invoice PDFs", type="pdf", accept_multiple_files=True)

if uploaded_files:
    results = []
    for file in uploaded_files:
        text = extract_text_from_pdf(file)
        fields = extract_fields(text)
        results.append(fields)

    df = pd.DataFrame(results)
    st.dataframe(df)

    output_file = "FTA_Validation_Results.xlsx"
    df.to_excel(output_file, index=False)
    with open(output_file, "rb") as f:
        st.download_button("ðŸ“¥ Download Excel", data=f, file_name=output_file)